<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Metadata>
		[Event("onRegistered")]
		[Event("homeCalled")]
	</fx:Metadata>
	<fx:Script><![CDATA[
		import com.backendless.Backendless;
		import com.backendless.BackendlessUser;
		
		import mx.controls.Alert;
		import mx.managers.CursorManager;
		import mx.rpc.IResponder;
		import mx.rpc.Responder;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		
		private static const NAME_KEY:String = "name";
		private static const EMAIL_KEY:String = "email";
		private static const LOGIN_KEY:String = "login";
		private static const PASSWORD_KEY:String = "password";
		private static const GENDER_KEY:String = "gender";
		private static const DATE_OF_BIRTH_KEY:String = "dateofbirth";
		
		private function onRegisterClick( event:MouseEvent ):void
		{
			if( nameField.text == "" )
			{
				Alert.show( "Name cannot be empty" );
				return;
			}
			
			if( passwordField.text == "" )
			{
				Alert.show( "Password cannot be empty" );
				return;
			}
			
			if( passwordField.text != verifyPasswordField.text )
			{
				Alert.show( "Passwords does not match" );
				return;
			}
			
			if( emailField.text == "" )
			{
				Alert.show( "Email cannot be empty" );
				return;
			}
			
			if( genderRadioGroup.selection == null )
			{
				Alert.show( "Please select your gender" );
				return;
			}
			
			if( dateOfBirthField.text == "" )
			{
				Alert.show( "Please select your date of birth" );
				return;
			}
			
			var candidate:BackendlessUser = new BackendlessUser();
			candidate.setProperty( NAME_KEY, nameField.text );
			candidate.setProperty( PASSWORD_KEY, passwordField.text );
			candidate.setProperty( EMAIL_KEY, emailField.text );
			candidate.setProperty( LOGIN_KEY, emailField.text );
			candidate.setProperty( GENDER_KEY, genderRadioGroup.selectedValue );
			candidate.setProperty( DATE_OF_BIRTH_KEY, dateOfBirthField.value );
			
			registerButton.enabled = false;
			CursorManager.setBusyCursor();
			
			var registerResponder:IResponder = new mx.rpc.Responder( registrationSucceeded, registrationFailed );
			Backendless.UserService.register( candidate, registerResponder );
		}
		
		private function registrationSucceeded( event:ResultEvent ):void
		{
			registerButton.enabled = true;
			CursorManager.removeBusyCursor();
			
			dispatchEvent( new Event( 'onRegistered' ) );
		}
		
		private function registrationFailed( fault:FaultEvent ):void
		{
			registerButton.enabled = true;
			CursorManager.removeBusyCursor();
			
			Alert.show( fault.fault.faultString );
		}
		
		protected function onCancelClick( event:MouseEvent ):void
		{
			dispatchEvent( new Event( 'homeCalled' ) );
		}
	]]></fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="genderRadioGroup"/>
	</fx:Declarations>
	<s:Form width="100%" height="100%">
		<s:layout>
			<s:FormLayout verticalAlign="middle" horizontalAlign="center"/>
		</s:layout>
		<s:VGroup horizontalAlign="left" width="300" >
			<s:Button label="Cancel" click="onCancelClick(event)"/>
		</s:VGroup>
		<s:VGroup horizontalAlign="right" paddingTop="20">
			<s:FormItem label="Name:" fontSize="14">
				<s:TextInput id="nameField" width="200"/>
			</s:FormItem>
			<s:FormItem label="Password:" fontSize="14">
				<s:TextInput id="passwordField" width="200" displayAsPassword="true"/>
			</s:FormItem>
			<s:FormItem label="Verify Password:" fontSize="14">
				<s:TextInput id="verifyPasswordField" width="200" displayAsPassword="true"/>
			</s:FormItem>
			<s:FormItem label="Email:" fontSize="14">
				<s:TextInput id="emailField" width="200"/>
			</s:FormItem>
			<s:HGroup width="300" gap="10" horizontalAlign="right" verticalAlign="justify">
				<s:Label fontSize="14" text="Sex:" textAlign="left" verticalAlign="middle"/>
				<s:HGroup width="200" gap="20" horizontalAlign="center" verticalAlign="justify">
					<s:RadioButton label="M" groupName="genderRadioGroup" value="Gender.MALE"/>
					<s:RadioButton label="F" groupName="genderRadioGroup" value="Gender.FEMALE"/>
				</s:HGroup>
			</s:HGroup>
			<s:FormItem label="Date of birth:" fontSize="14">
				<mx:DateField id="dateOfBirthField" width="200"/>
			</s:FormItem>
		</s:VGroup>
		<s:VGroup horizontalAlign="right" width="300" paddingTop="20">
			<s:Button label="Register" id="registerButton" click="onRegisterClick(event)"/>
		</s:VGroup>
	</s:Form>
	
</s:Group>
