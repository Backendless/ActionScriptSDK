<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		title="PushScreen" initialize="onInitialize(event)" 
		xmlns:pushdemo="com.backendless.examples.messagingservice.pushdemo.*">
	<fx:Metadata>
		[Event("mainScreenCalled")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.backendless.Backendless;
            import com.backendless.examples.flex.AppSettings;
            import com.backendless.messaging.DeliveryOptions;
			import com.backendless.messaging.DeviceRegistration;
			import com.backendless.messaging.PublishOptions;
			import com.backendless.messaging.PushNotificationEvent;
			
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.Responder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var deliveryOptions:DeliveryOptions;
			
			protected function onInitialize(event:FlexEvent):void
			{	
				deliveryOptions = new DeliveryOptions();
				deliveryOptions.pushBroadcast = DeliveryOptions.ALL;
				
				var deviceRegistration:DeviceRegistration = new DeviceRegistration();
				deviceRegistration.gcmSenderId = AppSettings.SENDER_ID;
				
				beginBusy();
				Backendless.Messaging.registerDevice(deviceRegistration, receivedPushNotification,
					new mx.rpc.Responder( function(result:ResultEvent):void
					{
						endBusy();
					}, onFault));
			}
			
			public function receivedPushNotification( event:PushNotificationEvent ):void
			{
				historyField.text = event.data + "\n" + historyField.text;
			}
			
			protected function onSendButtonClick(event:MouseEvent):void
			{
				if( messageField.text == "")
					return;
				
				beginBusy();
				
				var publishOptions:PublishOptions = null;

				if( forceNotify.selected )
				{
					publishOptions = new PublishOptions();
					publishOptions.addHeader( "android-ticker-text", "Backendless PushDemo" );
					publishOptions.addHeader( "android-content-title", "Backendless PushDemo" );
					publishOptions.addHeader( "android-content-text", messageField.text );
				}
				
				Backendless.Messaging.publish( messageField.text, publishOptions, deliveryOptions,
					new mx.rpc.Responder( function(result:ResultEvent ):void
					{
						endBusy();
					}, onFault));

				messageField.text = "";
			}
			
			protected function onUnregisterButtonClick(event:MouseEvent):void
			{
				beginBusy();
				Backendless.Messaging.unregisterDevice( new mx.rpc.Responder( function(result:ResultEvent):void
					{
						endBusy();
						dispatchEvent( new Event("mainScreenCalled") );
					}, onFault));
			}
			
			protected function onFault( fault:FaultEvent ):void
			{
				endBusy();
				var simplePopup:SimplePopup = new SimplePopup(); 
				PopUpManager.addPopUp(simplePopup, this, true);
				simplePopup.title = "Error";
				simplePopup.width = this.width;
				simplePopup.messageField.text = fault.fault.faultString;
			}
			
			private function beginBusy():void
			{
				sendButton.enabled = false;
				unregisterButton.enabled = false;
				CursorManager.setBusyCursor();
			}
			
			private function endBusy():void
			{
				sendButton.enabled = true;
				unregisterButton.enabled = true;
				CursorManager.removeBusyCursor();
			}			
		]]>
	</fx:Script>
	<s:Scroller focusEnabled="false"
				hasFocusableChildren="true"
				width="100%" height="100%" verticalScrollPolicy="auto">
		<s:VGroup horizontalAlign="center" verticalAlign="middle" paddingLeft="20" paddingRight="20" paddingTop="20" paddingBottom="20">
			<s:Label text="Backendless Push" fontSize="25" fontWeight="bold" />
			<s:Label width="100%"
					 text="The device is now registered. Use the button below to broadcast a message or login to the Backendless Console, select Messaging and send a message from there."
					 textAlign="left" paddingTop="20" />
			<s:VGroup width="100%" paddingTop="50" horizontalAlign="left">
				<s:Label text="Message:" paddingLeft="10" />
				<s:HGroup width="100%">
					<s:TextInput id="messageField" width="70%" height="100%"/>
					<s:Button id="sendButton" width="30%" height="100%" label="Send" click="onSendButtonClick(event)"/>
				</s:HGroup>
				<s:CheckBox id="forceNotify" label="Include notification center update"/>
				<s:Label text="Received Messages:" paddingLeft="10" paddingTop="15" />
				<s:TextArea id="historyField" width="100%" height="200" editable="false"
							focusEnabled="false" heightInLines="10" verticalScrollPolicy="auto"/>
			</s:VGroup>
			<s:VGroup width="100%" paddingTop="20" horizontalAlign="center">
				<s:Button id="unregisterButton" label="Unregister device" click="onUnregisterButtonClick(event)"/>
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
</s:View>